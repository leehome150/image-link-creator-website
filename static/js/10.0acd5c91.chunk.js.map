{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Result","styled","div","H1","h1","Img","img","Dragger","Upload","Component","observer","ref1","useRef","ref2","useStores","ImageStore","UserStore","store","useLocalStore","width","setWidth","current","value","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","type","size","error","upload","then","console","log","catch","tip","spinning","isUploading","style","backgroundColor","border","className","InboxOutlined","target","rel","href","filename","src","alt","placeholder","onChange","ref","fullStr","Tips","children","Home","Uploader"],"mappings":"ojBAOA,IAAMA,EAASC,IAAOC,IAAV,KAKNC,EAAKF,IAAOG,GAAV,KAKFC,EAAMJ,IAAOK,IAAV,KAIFC,EAAWC,IAAXD,QA6GQE,EA3GGC,aAAS,WAEvB,IAAMC,EAAOC,mBACPC,EAAOD,mBAHgB,EAIGE,cAAzBC,EAJsB,EAItBA,WAAYC,EAJU,EAIVA,UACbC,EAAQC,aAAc,iBAAO,CAC/BC,MAAO,KACPC,SAF+B,WAG3BH,EAAME,MAAQR,EAAKU,QAAQC,OAE/B,eACI,OAAOL,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE/CI,OAAQ,KACRC,UAT+B,WAU3BP,EAAMM,OAASZ,EAAKU,QAAQC,OAEhC,gBACI,OAAOL,EAAMM,OAAN,aAAqBN,EAAMM,QAAW,IAEjD,cACI,OAAOR,EAAWU,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBV,EAAMW,SAAWX,EAAMY,eAUxGC,EAAQ,CACVC,gBAAgB,EAChBC,aAAc,SAAAC,GAGV,OAFAlB,EAAWmB,QAAQD,GACnBlB,EAAWoB,YAAYF,EAAKG,MACE,OAA1BpB,EAAUqB,aACVC,IAAQC,QAAQ,+CACT,GAEN,uBAAuBC,KAAKP,EAAKQ,MAIlCR,EAAKS,KAAO,SACZJ,IAAQK,MAAM,+BACP,IAEX5B,EAAW6B,SACNC,MAAK,SAACpB,GACHqB,QAAQC,IAAI,4BACZD,QAAQC,IAAItB,MACbuB,OAAM,WACTF,QAAQC,IAAI,gCAET,IAdHT,IAAQK,MAAM,sEACP,KAmBnB,OACI,6BACI,kBAAC,IAAD,CAAMM,IAAI,qBAAMC,SAAUnC,EAAWoC,aACjC,kBAAC5C,EAAD,iBAAauB,EAAb,CAAoBsB,MAAO,CAACC,gBAAiB,cAAeC,OAAQ,iBAChE,uBAAGC,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,gEACA,uBAAGA,UAAU,mBAAb,qGAMJxC,EAAWU,WAAa,kBAACzB,EAAD,KACpB,kBAACG,EAAD,iCACA,4BACI,wDACA,4BAAI,uBAAGsD,OAAO,SAASC,IAAI,sBACpBC,KAAM5C,EAAWU,WAAWC,WAAWC,IAAID,WAAWC,KAAMZ,EAAWU,WAAWC,WAAWC,IAAID,WAAWC,MAEnH,kDAGA,4BACKZ,EAAW6C,UAEhB,wDAGA,4BACI,kBAACvD,EAAD,CAAKwD,IAAK9C,EAAWU,WAAWC,WAAWC,IAAID,WAAWC,IAAKmC,IAAI,8BAEvE,wDACA,4BAAI,2BAAOC,YAAY,mDAAWC,SAtE9B,WACpB/C,EAAMG,YAqEuE6C,IAAKtD,IAC9D,2BAAOoD,YAAY,mDAAWC,SApE7B,WACrB/C,EAAMO,aAmEwEyC,IAAKpD,KACnE,4BACI,uBAAG4C,OAAO,SAASC,IAAI,sBAAsBC,KAAM1C,EAAMiD,SAAUjD,EAAMiD,YAGzE,S,qLCvH5B,IAAMC,EAAMlE,IAAOC,IAAT,KAmBKO,EAXGC,aAAS,YAAiB,IAAf0D,EAAc,EAAdA,SAClBpD,EAAaF,cAAbE,UACP,OAAQ,oCAEIA,EAAUqB,YAAc,KAAO,kBAAC8B,EAAD,KAAOC,OCZhDC,EAAO3D,aAAS,WAElB,OACI,oCAAE,kBAAC,EAAD,mDAEE,kBAAC4D,EAAD,UAKGD","file":"static/js/10.0acd5c91.chunk.js","sourcesContent":["import React, {useRef} from \"react\"\nimport {useStores} from \"../stores\"\nimport {observer, useLocalStore} from 'mobx-react';\nimport {message, Upload, Spin} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\nimport styled from \"styled-components\"\n\nconst Result = styled.div`\nmargin-top:30px;\nborder:1px dashed #8896B3;\npadding:20px;\n`\nconst H1 = styled.h1`\nmargin；20px 0;\ntext-align:center;\ncolor:#1890FF;\n`\nconst Img = styled.img`\nmax-width:300px;\n`\n\nconst {Dragger} = Upload;\n\nconst Component = observer(() => {\n\n    const ref1 = useRef()\n    const ref2 = useRef()\n    const {ImageStore, UserStore} = useStores()\n    const store = useLocalStore(() => ({\n        width: null,\n        setWidth() {\n            store.width = ref1.current.value;\n        },\n        get widthStr() {\n            return store.width ? `/w/${store.width}` : '';\n        },\n        height: null,\n        setHeight() {\n            store.height = ref1.current.value;\n        },\n        get heightStr() {\n            return store.height ? `/h/${store.height}` : '';\n        },\n        get fullStr() {\n            return ImageStore.serverFile.attributes.url.attributes.url + '?imageView2/0' + store.widthStr + store.heightStr\n        }\n\n    }))\n    const bindWidthChange = () => {\n        store.setWidth()\n    }\n    const bindHeightChange = () => {\n        store.setHeight()\n    }\n    const props = {\n        showUploadList: false,\n        beforeUpload: file => {\n            ImageStore.setFile(file)\n            ImageStore.setFilename(file.name)\n            if (UserStore.currentUser === null) {\n                message.warning('请先登录再上传')\n                return false\n            }\n            if (!/(png|jpg|jpeg|gif)$/i.test(file.type)) {\n                message.error('只能上传png/jpg/gif格式的图片');\n                return false;\n            }\n            if (file.size > 1024 * 1024) {\n                message.error('图片最大1M');\n                return false;\n            }\n            ImageStore.upload()\n                .then((serverFile) => {\n                    console.log('上传成功')\n                    console.log(serverFile)\n                }).catch(() => {\n                console.log('上传失败')\n            })\n            return false\n        },\n\n    }\n\n\n    return (\n        <div>\n            <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\n                <Dragger {...props} style={{backgroundColor: \"transparent\", border: \"transparent\"}}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined/>\n                    </p>\n                    <p className=\"ant-upload-text\">点击或则拖拽上传图片</p>\n                    <p className=\"ant-upload-hint\">\n                        仅支持.png/.gif/.jpg/格式的图片，图片最大1M\n                    </p>\n                </Dragger>\n            </Spin>\n            {\n                ImageStore.serverFile ? <Result>\n                    <H1>上传结果</H1>\n                    <dl>\n                        <dt>线上地址</dt>\n                        <dd><a target=\"_blank\" rel=\"noopener noreferrer\"\n                               href={ImageStore.serverFile.attributes.url.attributes.url}>{ImageStore.serverFile.attributes.url.attributes.url}</a>\n                        </dd>\n                        <dt>\n                            文件名\n                        </dt>\n                        <dd>\n                            {ImageStore.filename}\n                        </dd>\n                        <dt>\n                            图片预览\n                        </dt>\n                        <dd>\n                            <Img src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"图片链接\"/>\n                        </dd>\n                        <dt>更多尺寸</dt>\n                        <dd><input placeholder=\"最大宽度（可选）\" onChange={bindWidthChange} ref={ref1}/>\n                            <input placeholder=\"最大高度（可选）\" onChange={bindHeightChange} ref={ref2}/></dd>\n                        <dd>\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={store.fullStr}>{store.fullStr}</a>\n                        </dd>\n                    </dl>\n                </Result> : null\n            }\n        </div>\n    )\n})\n\nexport default Component;","import React from \"react\"\nimport {useStores} from \"../stores\"\nimport {observer} from \"mobx-react\"\nimport styled from \"styled-components\"\n\nconst Tips =styled.div`\nfont-size:16px;\nbackground:transparent;\nmargin: 30px 0;\npadding:10px;\ncolor:#8896B3;\nborder-radius:4px;\n`\nconst Component = observer(({children}) => {\n    const {UserStore} = useStores()\n    return (<>\n            {\n                UserStore.currentUser ? null : <Tips>{children}</Tips>\n            }\n\n        </>\n    )\n})\n\nexport default Component;","import React from \"react\"\nimport {observer} from 'mobx-react';\nimport Uploader from '../components/Uploader'\nimport Tips from '../components/Tips'\n\nconst Home = observer(() => {\n\n    return (\n        <><Tips>请先登录再上传</Tips>\n\n            <Uploader/>\n        </>\n    )\n})\n\nexport default Home;"],"sourceRoot":""}