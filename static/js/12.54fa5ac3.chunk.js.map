{"version":3,"sources":["pages/Register.js"],"names":["Wrapper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Components","AuthStore","useStores","history","useHistory","name","initialValues","remember","onFinish","values","console","log","setUsername","username","setPassword","password","register","then","push","catch","message","error","onFinishFailed","errorInfo","Item","label","rules","required","validator","rule","value","test","Promise","reject","length","resolve","min","max","Password","getFieldValue","type","htmlType"],"mappings":"2fAQA,IAAMA,EAAUC,IAAOC,IAAV,KAOPC,EAAQF,IAAOG,GAAV,KAMLC,EAAS,CACXC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEjBE,EAAa,CACfD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KA2FnBI,UAxFI,WAAO,IACfC,EAAWC,cAAXD,UACLE,EAASC,cA8BX,OAEI,kBAACf,EAAD,KACI,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACQE,EADR,CAEIW,KAAK,QACLC,cAAe,CAACC,UAAU,GAC1BC,SArCK,SAAAC,GACbC,QAAQC,IAAI,WAAYF,GACxBR,EAAUW,YAAYH,EAAOI,UAC7BZ,EAAUa,YAAYL,EAAOM,UAC7Bd,EAAUe,WACLC,MAAK,WACFd,EAAQe,KAAK,QACdC,OAAM,WACXC,IAAQC,MAAM,gCA8BRC,eA1BW,SAAAC,GACnBb,QAAQC,IAAI,UAAWY,MA2Bf,kBAAC,IAAKC,KAAN,CACIC,MAAM,qBACNpB,KAAK,WACLqB,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,yCAC9B,CACIQ,UA9BC,SAACC,EAAMC,GAC5B,MAAI,IAAIC,KAAKD,GAAeE,QAAQC,OAAO,0DACvCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,4CAC1DD,QAAQG,cA8BH,kBAAC,IAAD,OAGJ,kBAAC,IAAKX,KAAN,CACIC,MAAM,eACNpB,KAAK,WACLqB,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,mCAAW,CACzCgB,IAAK,EAAGhB,QAAS,mCAClB,CACCiB,IAAK,GAAIjB,QAAS,sCAItB,kBAAC,IAAMkB,SAAP,OAGJ,kBAAC,IAAKd,KAAN,CACIC,MAAM,2BACNpB,KAAK,kBACLqB,MAAO,CAAC,CAACC,UAAU,EAAMP,QAAS,oDA9C1B,SAAC,GAAD,IAAEmB,EAAF,EAAEA,cAAF,MAAsB,CAC1CX,UAD0C,SAChCC,EAAMC,GACZ,OAAGS,EAAc,cAAgBT,EAAcE,QAAQG,UAChDH,QAAQC,OAAO,mDA+Cd,kBAAC,IAAMK,SAAP,OAIJ,kBAAC,IAAKd,KAAS1B,EACX,kBAAC,IAAD,CAAQ0C,KAAK,UAAUC,SAAS,UAAhC","file":"static/js/12.54fa5ac3.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {Form, Input, Button} from 'antd';\r\nimport styled from \"styled-components\"\r\nimport {useStores} from \"../stores\"\r\nimport {useHistory} from 'react-router-dom'\r\nimport {message} from \"antd\"\r\n\r\n\r\nconst Wrapper = styled.div`\r\nmax-width:600px;\r\nmargin:30px auto;\r\nbox-shadow:2px 2px 4px 0 rgba(0,0,0,0.2);\r\nborder-radius:4px;\r\npadding:20px;\r\n`\r\nconst Title = styled.h1`\r\ntext-align:center;\r\nmargin-bottom:30px;\r\n\r\n`\r\n\r\nconst layout = {\r\n    labelCol: {span: 6},\r\n    wrapperCol: {span: 18},\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: {offset: 6, span: 18},\r\n};\r\n\r\nconst Components = () => {\r\n    const {AuthStore}=useStores();\r\nconst history= useHistory()\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n        AuthStore.setUsername(values.username);\r\n        AuthStore.setPassword(values.password);\r\n        AuthStore.register()\r\n            .then(()=>{\r\n                history.push('/')\r\n            }).catch(()=>{\r\n          message.error('注册失败')\r\n        })\r\n    };\r\n\r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    const validateUsername = (rule, value) => {\r\n        if (/w/.test(value)) return Promise.reject('只能是字母或下划线')\r\n        if (value.length < 6 || value.length > 16) return Promise.reject('长度为6~16个字符')\r\n        return Promise.resolve();\r\n\r\n    };\r\n    const confirmPassword = ({getFieldValue}) => ({\r\n        validator(rule, value) {\r\n            if(getFieldValue('password') === value) return Promise.resolve();\r\n            return Promise.reject('两次密码不一致');\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n\r\n        <Wrapper>\r\n            <Title>注册</Title>\r\n            <Form\r\n                {...layout}\r\n                name=\"basic\"\r\n                initialValues={{remember: true}}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n            >\r\n                <Form.Item\r\n                    label=\"用户名\"\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: '请输入用户名!'},\r\n                        {\r\n                            validator: validateUsername\r\n                        }]}\r\n                >\r\n                    <Input/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"密码\"\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: '请输入密码!'}, {\r\n                        min: 6, message: '最少6位字符'\r\n                    }, {\r\n                        max: 16, message: '最多16位字符'\r\n\r\n                    }]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"确认密码\"\r\n                    name=\"confirmPassword\"\r\n                    rules={[{required: true, message: '请再次输入密码！'},\r\n                        confirmPassword\r\n                    ]}\r\n                >\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...tailLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        提交\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Components;"],"sourceRoot":""}